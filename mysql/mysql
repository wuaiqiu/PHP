						mysql
						
1.下载与安装

下载

	mysql.rpm-bundle.tar

安装

	mysql-community-common
	mysql-community-libs
	mysql-community-client
	mysql-community-server
	
修改默认密码(默认生成密码/var/log/mysqld.log)

	mysqladmin -u root -p默认密码 password 'newpassword'


2.mysqladmin (mysql服务器管理任务的客户端工具)

	
	
	mysqladmin  [-h ip] -u[username] -p[password] extended-status 
	
			create databasename：创建一个新数据库； 
			drop databasename：删除一个数据库及其所有表； 
			extended-status：给出服务器的一个扩展状态消息； 
			flush-hosts：清空所有缓存的主机； 
			flush-logs：清空所有日志； 
			flush-tables：清空所有表； 
			flush-privileges：再次装载授权表(同reload)； 
			kill id,id,...：杀死mysql线程； 
			password 新口令：将老密码改为新密码； 
			ping：检查mysqld是否活着； 
			processlist：显示服务其中活跃线程列表； 
			reload：重载授权表； 
			refresh：清空所有表并关闭和打开日志文件； 
			shutdown：关掉服务器； 
			status：给出服务器的简短状态消息； 
			variables：打印出可用变量； 
			version：得到服务器的版本信息。
			
			
3.mysqld_safe(安全启动脚本)

	mysqld_safe脚本会在启动MySQL服务器后继续监控其运行情况，并在其死机时重新启动它。
		(1). 检查系统和选项。
		(2). 检查MyISAM表。
		(3). 保持MySQL服务器窗口。
		(4). 启动并监视mysqld，如果因错误终止则重启。
		(5). 将mysqld的错误消息发送到数据目录中的host_name.err文件。
		(6). 将mysqld_safe的屏幕输出发送到数据目录中的host_name.safe文件。

	
	mysqld_safe	[options] &
　　		· --defaults-extra-file=path
　　		除了配置所读取的选项文件名。如果给出，必须首选该选项。
　　		· --defaults-file=path
　　		读取的代替配置文件的选项文件名。如果给出，必须首选该选项。
			· --no-defaults
　　		不要读任何配置文件。如果给出，必须首选该选项。
　　		· --ledir=path
　　		包含mysqld程序的目录的路径。使用该选项来显式表示服务器位置。
　　		· --mysqld=prog_name
　			　想要启动的服务器程序名(在ledir目录)。
　　		· --mysqld-version =suffix
　			　该选项类似--mysqld选项，但你只指定服务器程序名的后缀。
　　		· --user={user_name | user_id}
　　		以用户名user_name或数字用户ID user_id运行mysqld服务器。
				(本文中的“用户”指系统登录账户，而不是 授权表中的MySQL用户）。
			· --skip-grant-tables 
			以不检查权限的方式启动
			
4.mysql的密码安全策略


========================查看==================================================

	mysql> SHOW VARIABLES LIKE 'validate_password%'; 	#查看安全策略
	
		1).validate_password_dictionary_file 	指定密码验证的文件路径;
		2).validate_password_length  			密码最小长度
		3).validate_password_mixed_case_count   密码至少要包含的小写字母个数和大写字母个数;
		4).validate_password_number_count  		密码至少要包含的数字个数
		5).validate_password_policy 			密码强度检查等级，对应等级为：0/LOW、1/MEDIUM、2/STRONG,默认为1
		注意：
				0/LOW：只检查长度;
				1/MEDIUM：检查长度、数字、大小写、特殊字符;
				2/STRONG：检查长度、数字、大小写、特殊字符字典文件。
		6).validate_password_special_char_count	密码至少要包含的特殊字符数

		
		默认策略:密码中要出现[大写字母],[小写字母],[数字],[长度至少为8]
		
		
=====================设置===============================================

	mysql> set global validate_password_policy=0
	mysql> set global validate_password_length=1
	
	
	
5.设置远程连接

	只有一个默认的 root 用户, 只允许 localhost 连接
	%表示任何ip都可以登录

	(1)添加一个用户
	mysql>GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'password';
	
	(2)直接修改user表
	mysql>UPDATE user SET Host='%' WHERE User='root';
	
	重读授权表
	mysql>flush privileges;
	
	
6.mysql(客户端工具)

	mysql -u[userName] -p[password] -h[ip]
	
	
7.my.cnf(主配置文件)

			port = 3306						#mysqld服务运行时的端口号，默认为3306
			
			socket = /tmp/mysql.sock		#socket文件是linux/unix系统特有的，用户
					在该环境下的客户端连接可以不通过tcp/ip网络，而直接使用socket文件连接
			
			back_log  = 300					#该值为设定档mysql暂时停止响应新的请求前，
			短时间内有多少个请求可以存在堆栈内，如果系统在短时间内有很多的连接，应该增大该值，
			该值最好设置小于512的整数

			skip-networking					#不在tcp/ip端口上进行监听，所有的连接都是通过本地
			的socket文件连接，这样可以提高安全性，确定是不能通过网络连接数据库。

			skip-locking					#避免mysql的外部锁定，增强稳定性
			
			skip-name-resolve				#避免mysql对外部的连接进行DNS解析，若使用此设置，
			那么远程主机连接时只能使用ip，而不能使用域名

			max_connections = 3000			#指定mysql服务所允许的最大连接进程数，

			max_connect_errors = 1000		#每个主机连接允许异常中断的次数，当超过该次数mysql
			服务器将禁止该主机的连接请求，直到mysql服务重启，或者flushhosts命令清空host的相关信息

			table_cache = 614k				#表的高速缓冲区的大小，当mysql访问一个表时，如果mysql
			表缓冲区还有空间，那么这个表就会被打开通放入高速缓冲区，好处是可以更快速的访问表中的内容。
			
			max_allowed_packet = 4M			#设定在网络传输中一次可以传输消息的最大值，系统默认为1M，
			最大可以是1G

			sort_buffer_size = 16M			#排序缓冲区用来处理类似orderby以及groupby队列所引起的排序，
			系统默认大小为2M,该参数对应分配内存是每个连接独占的，若有100个连接，实际分配的排序缓冲区
			大小为6*100；推荐设置为6M-8M

			join_buffer_size 8M				#联合查询操作所使用的缓冲区大小。

			thread_cache_size = 64			#设置threadcache池中可以缓存连接线程的最大数量，默认为0，

			query_cache_size = 64M			#指定mysql查询缓冲区的大小，
			
			query_cache_limit = 4M			#只有小于该值的结果才被缓冲，放置一个极大的结果将其他
			所有的查询结果都覆盖

			tmp_table_size 256M				#内存临时表的大小，如果超过该值，会将临时表写入磁盘

			default_storage_engine = MYISAM	#创建表时默认使用的存储引擎

			log-bin=mysqlbinlog				#打开二进制日志功能

			key_buffer_size = 384M			#指定索引缓冲区的大小，内存为4G时刻设置为256M或384M

			read_buffer_size = 8M			#用来做MYISAM表全表扫描的缓冲大小
			
			pid-file= /usr/local/mysql/mysqld.pid	#pid写入文件位置
			
			default-character-set=utf8		#设置默认字符集(client下)
			
			character-set-server=utf8		#设置服务端字符集(mysqld下)
			
			datadir=/var/lib/mysql			#数据库目录

			
8.MySQL存储引擎

　　InnoDB和MyISAM是许多人在使用MySQL时最常用的两个表类型，这两个表类型各有优劣，

视具体应用而定。基本的差别为：MyISAM类型不支持事务处理等高级处理，而InnoDB类型支持。

MyISAM类型的表强调的是性能，其执行数度比InnoDB类型更快，但是不提供事务支持，而InnoDB

提供事务支持以及外部键等高级数据库功能。

	MyISAM存储引擎适用于读多写少，对读性能要求比较高的系统 
	

	
		
		

	

	
			

			
			
				
			
	
			


