					bootstrap
							---css





一.基本模板
	

	<!DOCTYPE html>
	<html>
	<head>
		<meta charset="UTF-8">
		
		<!--Bootstrap移动设备优先，屏幕宽度和设备一致，初始缩放比例，最大缩放比例和禁止用户缩放-->
		<meta name="viewport" content="width=device-width, initial-scale=1.0,maximum-scale=1.0,user-scalable=no" />
		
		<!-- 引入 Bootstrap 核心文件-->
		<link href="css/bootstrap.min.css" rel="stylesheet" />
		
		<!-- 引入Jquery -->
		<script type="text/javascript" src="jquery-3.2.1.js"></script>
		
		<!-- 引入Bootstrap核心插件-->
		<script src="js/bootstrap.min.js"></script>
		
		<title>Bootstrap</title>
	</head>
	<body>
		<h1>Hello Bootstrap</h1>
	</body>
	</html>






二.栅格系统


	（1）基本格式

		栅格系统中，系统容器会随着屏幕大小的增减自动分配最多12列，通过一系列的行与列的组合，来创建页面布局
			
		<div class="container">		//固定宽度
			<div class="row">	//创建响应行，行必须放置在 .container class 内
			   <div class="col-*-*"> ... </div>
			   <div class="col-*-*"> ... </div>    
			</div>
		</div>

	==================================================================================================
	
	超小屏幕 手机 (<768px)	小屏幕 平板 (≥768px)	中等屏幕 桌面显示器 (≥992px)	大屏幕 大桌面显示器 (≥1200px)
	.col-xs-		.col-sm-		.col-md-			.col-lg-
	
	==================================================================================================

	(2)响应式的列重置
		
		某些元素字数较多，窄屏幕中就没有办法放在一行中，就会影响行高，某些列可能会出现比别的列高的情况。为了克服这一问题，

	建议联合使用 .clearfix和 响应式工具类。
		
		<div class="clearfix visible-xs"></div>
		

	（3）列偏移，中间保持空隙

		<div class="container">	
			<div class="row">	
				<div class="col-md-8">8</div>	
				<div class="col-md-3 col-md-offset-1">3</div>
			</div>
		</div>

	（4)列嵌套
	
		<div class="container">	
			<div class="row">	
				<div class="col-md-8">
					<div class="col-md-8">8</div>	
					<div class="col-md-4">4</div>
				</div>	
			</div>
		</div>
		
	（5）列排序，交换位置 push向左移动 pull向右移动

		<div class="container">	
			<div class="row">	
				<div class="col-md-9 col-md-push-3">9</div>	
				<div class="col-md-3 col-md-push-9">3</div>
			</div>
		</div>


三.页面排版


	（1）bootstrap分别对h1～h6进行了css样式封装:
					
					<h1> 主标题 <small>副标题</small> </h1>

	（2）内联文本元素:

					<p> </p>	<del> </del>	<s> </s>	<ins> </ins>
					<u> </u>	<small> </small>	<strong> </strong>	<em> </em>

	（3）文本对齐:
			
					.text-left	.text-center	.text-right	.text-nowrap

	（4）文本大小写：

					.text-lowercase	.text-uppercase	.text-capitalize

	（5）地址文本：

					<address>
						<addr title="phone">P:</addr> 123-456
					</address>

	（6）应用文本：(反向样式.blockquote-reverse)

					<blockquote>

					</blockquote>


	（7）列表排版:(移除默认样式.list-unstyled	设置成内联.list-inline)

					<ul class="list-unstyled">
						<li> ... </li>
						...
					</ul>


	（8）代码
		
			内联代码(内联)：		<code> ... </code>
			代码块（块级）:		<pre> ... </pre>







四.表格


	（1）基本格式，实现基本的表格样式
	
	======================================================================
			<table class="table">
  				<caption>基本的表格布局</caption>
			  	<thead>
    					<tr>
      						<th>名称</th>
      						<th>城市</th>
    					</tr>
  				</thead>
			 	<tbody>
    					<tr>
      						<td>Tanmay</td>
      						<td>Bangalore</td>
    					</tr>
    					<tr>
      						<td>Sachin</td>
      						<td>Mumbai</td>
    					</tr>
  				</tbody>
			</table>

	（2）table类样式
			
			<table class="table table-striped">	条纹状表格
		
			<table class="table table-bordered">	带边框的表格
		
			<table class="table table-hover">	悬停鼠标

	（3）<th> <td> <tr>状态类，可以单独设置每一行的背景颜色

			<tr class="success">
		
			active	  info	  danger  success    warning	

	（4）<th> <td> <tr>隐藏

			<tr class="sr-only">






三.表单

	（1）基本格式

	========================================================================================

	<form role="form">
		<div class="form-group">
    			<label for="name">名称</label>
    			<input type="text" class="form-control" >
  		</div>
  		<div class="form-group">
    			<label for="name">密码</label>
    			<input type="password" class="form-control" >
  		</div>
  		<button type="submit" class="btn btn-default">提交</button>	
	</form>
	
	========================================================================================


	支持输入框控件:
		
		text	password     datetime	 date	 moth	 time	 week	 number	
		email	url	     search	 tel	 color


	（2）表单内联

		<form role="form" class="form-inline">		
		
		
	（3）其他控件

	=================================文本框(textarea)===============================
		
		<form role="form">
			<div class="form-group">
    				<label for="name">文本框</label>
    				<textarea class="form-control" rows="3"></textarea>
  			</div>
		</form>

	============================复选框（Checkbox）和单选框（Radio)===================
		
		<div class="checkbox">
    			<label><input type="checkbox" value="" name="checkbox">选项 1</label>
		</div>
		<div class="checkbox">
    			<label><input type="checkbox" value="" name="checkbox">选项 2</label>
		</div>


		<div class="radio">
    			<label><input type="radio" value="" name="radio">选项 1</label>
 
		</div>
		<div class="radio">
    			<label><input type="radio" value="" name="radio">选项 2</label>
 
		</div>

	对一系列复选框和单选框使用 .checkbox-inline 或 .radio-inline class，控制它们显示在同一行上

	===========================选择框（Select）======================================

		<form role="form">
		  <div class="form-group">
    			<label for="name">选择列表</label>
    			<select class="form-control">
      				<option>1</option>
      				<option>2</option>
      				<option>3</option>
    			</select>
  		</div>
	     </form>

	（4）表单大小

	可以分别使用 class .input-lg 和 .col-lg-* 来设置表单的高度和宽度
	
	 .input-sm  .input-md   .input-lg   控制高度
	 .col-sm-*  .col-md-*   .col-lg-*   控制宽度 	

	====================================================================================

	<div class="form-group">
    		<input class="form-control input-lg" type="text">
 	</div>

	<div class="row">
    		<div class="col-lg-2">
      			<input type="text" class="form-control" placeholder=".col-lg-2">
    		</div>
   		<div class="col-lg-3">
      			<input type="text" class="form-control" placeholder=".col-lg-3">
    		</div>
    		<div class="col-lg-4">
      			<input type="text" class="form-control" placeholder=".col-lg-4">
    		</div>
  	</div>
	
	====================================================================================

	（5）表单组合

		<div class="input-group">
			<div class="input-group-addon">$</div>
			<input type="text" class="form-control"/>
			<div class="input-group-addon">.00</div>
		</div>

	
	（6）校验状态，显示不同颜色
	
	<div class="form-group has-error">
	.has-error	.has-warning	.has-success
	
	//label标签同步相应状态
	<label class="control-label"> .. </label>

	=============================================================================
	
	<div class="form-group has-warning">
    		<label class="control-label" for="inputWarning">输入警告</label>
      		<input type="text" class="form-control" id="inputWarning">
	</div>

	==============================================================================






四.按钮

	（1）按钮元素

		
		<button class="btn btn-default"> BUTTON </button>

		<input type="button" class="btn btn-default" value="INPUT" />

		a.导航和导航条组件只支持<button>元素
		

	（2）按钮样式
		
		状态颜色

		<button class="btn btn-default"> BUTTON </button>
		
		.btn-default	.btn-info	.btn-danger	.btn-link	.btn-success	.btn-warning	.btn-primary

	

		尺寸大小
		
		<button class="btn btn-default btn-lg"> BUTTON </button>

		.btn-lg		.bg-sm		.btn-xs



		块级按钮
		
		<button class="btn btn-default btn-block"> BUTTON </button>
		
		.btn-block



		激活|禁用状态
	
		<button class="btn btn-default active"> BUTTON </button>

		.active		.disabled





五.图片

	（1）图片形状
	
		<img src="img.png" class="img-rounded">
	
		.img-circle	.img-thumbnail    .img-rounded
		将图片变为圆形 	缩略图功能	  为图片添加圆角

	（2）响应图片

		<img src="img.png" class="img-responsive" >
		
		.img-responsive


六.辅助类

	（1）情景文本颜色
		
		.text-muted 	柔和灰	.text-success	成功绿	.text-warning	警告黄
		.text-primary	主要蓝	.text-info	信息蓝	.text-danger	危险红

	（2）情景背景色

		.bg-primary	.bg-info	.bg-danger
		.bg-success	.bg-warning	

	（3）关闭按钮

		<button type="button" class="close">&times;</button>

	（4）三角符号

		<span class="caret"></span>

	（5）快速浮动

		<div class="pull-left">左边</div>
		<div class="pull-right">右边</div>

	（6）清理浮动，这个区块放在需要清理浮动区块的前面即可

		<div class="clearfix"></div>
		
	（7）块级居中
		
		<div class="center-block">居中</div>

	（8）显示和隐藏
		
		<div class="show">show</div>
		<div class="hidden">hidden</div>




七.响应工具类

	在媒体查询时，针对不同的屏幕大小，有时需要显示和隐藏部分内容，响应式工具类，就提供了这种解决方案
	
	超小屏幕	.visible-xs-*	.hidden-xs
	小屏幕	.visible-sm-*	.hidden-sm
	中等屏幕	.visible-md-*	.hidden-md
	大屏幕	.visible-lg-*	.hidden-lg

	对于显示内容，有三种方式block   inline-block	inline

	<div class="visible-xs-block"> bootstrap</div>  //在超小屏幕才可以出现bootstrap
