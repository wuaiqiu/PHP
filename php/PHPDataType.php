<?php

//-------------------------数据类型------------------------------------------//
    /*
     * 1.基本数据类型：
     * 整型(integer)
     * 浮点型(double)
     * 布尔型(boolean)
     * 字符串型(string)
     * 
     * 2.符合类型
     * 数值类型(array)
     * 对象类型(object)
     * 
     * 3.特殊类型
     * 空类型(null)
     * 资源类型(resource)
     * 
     * 
     * */
	
	
	
	//一.整型定义
	$s1=12;    //十进制定义(dec)
	$s2=012;   //八进制定义(oct);其实php底下已转换成了十进制
	$s3=0x12;  //十六进制定义(hex);其实php底下已转换成了十进制
	
	//整型进制转换函数，注意只有两种进制转换函数
	//1.10进制转换其他进制；参数为整型
	   echo "<br/>12的二进制".decbin(12);  #12的二进制1100
	   echo "<br/>12的八进制".decoct(12);  #12的八进制14
	   echo "<br/>12的十六进制".dechex(12);#12的十六进制c
	   
	  //2.其他进制转换10进制；参数为字符串；
	   echo "<br/>101（二进制）的十进制".bindec("101"); #101（二进制）的十进制5
	   echo "<br/>101（八进制）的十进制".octdec("101"); #101（八进制）的十进制65
	   echo "<br/>101（十六进制）的十进制".hexdec("101");#101（十六进制）的十进制257
	   //当字符串有其他非数值字符，只取符合指定类型的数值
	   echo "<br/>101（二进制）的十进制".bindec("a1a0a1a");#101（二进制）的十进制5
	   
	   
	   
	   
	 //二.浮点型定义;
	 $s4=1.23;     #一般表示方法
	 $s5=1.23E3;   #科学计数法
	 
	 //当一个整型超过PHP_INT_MAX范围时，会变成浮点类型
	 $s6=PHP_INT_MAX+1;    
	 echo "<br/>s6的类型".gettype($s6);       #s6的类型double
	 
	 
	 
	 
	 //三.字符串类型定义
	 //1.双引号定义:可以识别 \" , \\ , \n , \t , \r , \$ 转义符；可以识别变量
	 $str1="abc";      #abc
	 $str11="a\"bc";   #a"bc
	 $str12="a\$bc";   #a$bc
	 $str13="a\bc";    #当"\"在字符中间时可以不转义；a\bc

	 
	 //2.单引号定义:可以识别 \' , \\ 转义符;不能识别变量
	 $str2='abc';      #abc
	 $str21='a\'bc';   #a'bc
	 $str22='a\bc';    #当"\"在字符中间时可以不转义；a\bc
	 $str23='a$bc';    #a$bc
	 
	 
	 //3.双引号定界符定义:STR3为标识符，最后标识符必须独占一行
	 //可以识别 \\ , \n , \t , \r , \$ 转义符
$str3=<<<"STR3"
	    abc ab\\c a"bc a'bc a\$bc
STR3;
#abc ab\c a"bc a'bc a$bc
    
  
    //4.单引号定界符定义:没有转义符,全不需要转义
$str4=<<<'STR4'
        abc a\bc a'bc a"bc a$bc
STR4;
#abc ab\c a'bc a"bc
	 
   
	 
	 
	 

	 //四.gettype($var):获取该变量的类型
	 echo "<br/>s1的类型".gettype($s1);       #s1的类型integer
	 echo "<br/>s4的类型".gettype($s4);       #s4的类型double
	 echo "<br/>str1的类型".gettype($str1);   #str1的类型string
	 
//--------------------------类型转换---------------------------------------//

	 //1.自动类型转换:
       	//"+"在php只做算术运算符
     	$s1=1+2;            #3
    	$s2="1"+2;          #3
    	$s3="1"+"2";        #3
    	$s4=1+"2abc";       #3
    	$s5=1+"a2bc";       #3
    	$s6="a1"+"b2";      #3
    
    
    
    
	//2.强制类型转换:
    	$v1=12;
    	$v2=(float)$v1;
    	$v3=(string)$v1;
    	echo gettype($v1);   #integer
    	echo gettype($v2);   #double
    	echo gettype($v3);   #string	

//-----------------------------运算符--------------------------------------//

	/*
	 * 1.算术运算符(+ - * / %)
	 * a.他们只针对数值计算
	 * b.取余只针对整型计算，若不是整型，会自动截取为整型
	 * */	
	//特殊：字符串只能自增
	$s1="a";
	$s2="A";
	$s3="abc";
	$s4="xyz";
	$s1++;$s2++;$s3++;$s4++;
	echo "s1=$s1,s2=$s2;s3=$s3,s4=$s4";    #s1=b,s2=B;s3=abd,s4=xza

	
	/*
	 *2.比较运算符(> >= == < <= === !== !===) 
	 * */
	
	//特殊:不同基本数据类型比较
	//a.比较的数据类型中若一方有布尔型，则转换为布尔型比较；（true > false）
	//b.否则，若一方有数值，则转换为数值比较（常规比较）
	//c.否则，若全是"纯数值字符串"，则转换为数值比较
	//d.否则，若全是"字符串"，则从前往后逐个按字符比较(ascii码比较)
	"abc">false;    #true
	 3>"12";         #false
	"3">"1";        #true
	"abc">"xyz";    #false
	
	 
	//==(值相等)与===(值与类型相等)区别
	   3=="3";        #true
	   3==="3";       #false
	

	/*
	 * 3.逻辑运算符(&& || !)
	 * */
	

	/*
	 * 4.字符运算符(. .=)
	 * */
	
   
	
	/*
	 * 5.赋值运算符(= += -= *= /= %= .=)
	 * $var+=value;
	 * $var=$var+value;
	 * */
   
	   
	   
	/*
	 * 6.三元运算符
	 * boolean?true:false;
	 * */
	
   
	
	/*
	 * 7.位运算符
	 * &   按位与
	 * |   按位或
	 * ~   按位取反
	 * ^   按位异或
	 * <<  按位左移
	 * >>  按位右移
	 * */
	

	
	/*
	 * 8.数组运算符
	 * + 链接符:将右边的数组项合并到左边的数组中，若有重复键，以左边的数组项为准
	 * */
	$arr1=array("a"=>1,"b"=>2);
	$arr2=array("c"=>3,"a"=>4,"d"=>5);
	$arr3=$arr1+$arr2;
	var_dump($arr3);       #array(4) { ["a"]=> int(1) ["b"]=> int(2) 
	                       #["c"]=> int(3) ["d"]=> int(5) }


?>
