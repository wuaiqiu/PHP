=begin
字面量（literal）：代码中能见到的值，数值，bool值，字符串等都叫字面量 
数值类型(Number)
    
    a)整型(Integer)
    
    0 对应 octal，0x 对应 hex，0b 对应 binary，后跟一串数字。下划线字符在数字字符串中被忽略。
  
  ===============================================================
    a=123
    b=1_2_3
    c=0123
    d=0b1010
    e=0x123
  ===============================================================

  b)浮点型(Float)
    
    它们是带有小数的数字。浮点数是类 Float 的对象

  ==============================================================
    123.4                # 浮点值
    1.0e6                # 科学记数法
    4E20                 # 不是必需的
    4e+20                # 指数前的符号
  ==============================================================


运算符

  (1)Ruby 算术运算符，假设变量 a 的值为 10，变量 b 的值为 20
  运算符 描述  实例
  + 加法 - 把运算符两边的操作数相加 a + b 将得到 30
  - 减法 - 把左操作数减去右操作数  a - b 将得到 -10
  * 乘法 - 把运算符两边的操作数相乘 a * b 将得到 200
  / 除法 - 把左操作数除以右操作数  b / a 将得到 2
  % 求模 - 把左操作数除以右操作数，返回余数 b % a 将得到 0
  **  指数 - 执行指数计算 a**b 将得到 10 的 20 次方

  (2)Ruby 比较运算符
  运算符 描述  实例
  ==  检查两个操作数的值是否相等，如果相等则条件为真。  (a == b) 不为真。
  !=  检查两个操作数的值是否相等，如果不相等则条件为真。 (a != b) 为真。
  > 检查左操作数的值是否大于右操作数的值，如果是则条件为真。  (a > b) 不为真。
  < 检查左操作数的值是否小于右操作数的值，如果是则条件为真。  (a < b) 为真。
  >=  检查左操作数的值是否大于或等于右操作数的值，如果是则条件为真。 (a >= b) 不为真。
  <=  检查左操作数的值是否小于或等于右操作数的值，如果是则条件为真。 (a <= b) 为真。
  <=> 联合比较运算符。如果第一个操作数等于第二个操作数则返回 0，如果第一个操作数大于第
  二个操作数则返回 1，如果第一个操作数小于第二个操作数则返回 -1。  (a <=> b) 返回 -1。
  === 用于测试 case 语句的 when 子句内的相等。  (1...10) === 5 返回 true。

  (3)Ruby 赋值运算符
  运算符 描述  实例
  = 简单的赋值运算符，把右操作数的值赋给左操作数  c = a + b 将把 a + b 的值赋给 c
  +=  加且赋值运算符，把右操作数加上左操作数的结果赋值给左操作数 c += a 相当于 c = c + a
  -=  减且赋值运算符，把左操作数减去右操作数的结果赋值给左操作数 c -= a 相当于 c = c - a
  *=  乘且赋值运算符，把右操作数乘以左操作数的结果赋值给左操作数 c *= a 相当于 c = c * a
  /=  除且赋值运算符，把左操作数除以右操作数的结果赋值给左操作数 c /= a 相当于 c = c / a
  %=  求模且赋值运算符，求两个操作数的模赋值给左操作数  c %= a 相当于 c = c % a
  **= 指数且赋值运算符，执行指数计算，并赋值给左操作数  c **= a 相当于 c = c ** a

  (4)Ruby 并行赋值
  a = 10
  b = 20
  c = 30
  或
  a, b, c = 10, 20, 30

  (5)Ruby 逻辑运算符
  运算符 描述  实例
  and 称为逻辑与运算符。如果两个操作数都为真，则条件为真。  (a and b) 为真。
  or  称为逻辑或运算符。如果两个操作数中有任意一个非零，则条件为真。 (a or b) 为真。
  &&  称为逻辑与运算符。如果两个操作数都非零，则条件为真。  (a && b) 为真。
  ||  称为逻辑或运算符。如果两个操作数中有任意一个非零，则条件为真。 (a || b) 为真。
  ! 称为逻辑非运算符。用来逆转操作数的逻辑状态。如果条件为真则逻辑非运算符将使其为假。 !(a && b) 为假。
  not 称为逻辑非运算符。用来逆转操作数的逻辑状态。如果条件为真则逻辑非运算符将使其为假。 not(a && b) 为假。

  (6)Ruby 三元运算符
  运算符 描述  实例
  ? : 条件表达式 如果条件为真 ? 则值为 X : 否则值为 Y
=end